{"version":3,"sources":["ConvertHexWord.js","HexWord.tsx","index.tsx"],"names":["Object","defineProperty","exports","value","WORDLIST","require","ConvertHexWord","extended","this","hexmap","Map","hexmaplist","Array","from","keys","set","prototype","ConvertToHexWord","word","hexword","_loop_1","char","this_1","some","ascii_code","charCodeAt","get","_i","word_1","length","state_1","WordListToHexList","wordlist","hexwordlist","wordlistindex","push","id","default","HexWordHeader","Navbar","bg","variant","className","Brand","href","Text","React","Component","HexWordList","Container","map","index","HexWordCard","Card","Body","Title","props","Subtitle","Link","target","Button","toString","HexWordFaq","HexWord","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bfe84ed.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WORDLIST = require(\"./wordlist.json\");\nvar ConvertHexWord = /** @class */ (function () {\n    function ConvertHexWord(extended) {\n        if (extended === void 0) { extended = false; }\n        this.extended = extended;\n        this.hexmap = new Map([\n            [97, \"a\"],\n            [98, \"b\"],\n            [99, \"c\"],\n            [100, \"d\"],\n            [101, \"e\"],\n            [102, \"f\"],\n            [111, \"0\"],\n        ]);\n        this.hexmaplist = Array.from(this.hexmap.keys());\n        if (extended) {\n            this.hexmap.set(108, \"1\");\n        }\n    }\n    ConvertHexWord.prototype.ConvertToHexWord = function (word) {\n        var hexword = \"\";\n        var _loop_1 = function (char) {\n            if (this_1.hexmaplist.some(function (ascii_code) { return ascii_code === char.charCodeAt(0); })) {\n                hexword += this_1.hexmap.get(char.charCodeAt(0));\n            }\n            else {\n                return { value: \"\" };\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, word_1 = word; _i < word_1.length; _i++) {\n            var char = word_1[_i];\n            var state_1 = _loop_1(char);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        return hexword;\n    };\n    ConvertHexWord.prototype.WordListToHexList = function (wordlist) {\n        if (wordlist === void 0) { wordlist = WORDLIST; }\n        var hexwordlist = [];\n        var wordlistindex = 0;\n        for (var word in wordlist) {\n            var hexword = this.ConvertToHexWord(word);\n            if (hexword.length > 0) {\n                hexwordlist.push({ id: wordlistindex, hexword: hexword, word: word });\n            }\n            wordlistindex += 1;\n        }\n        return hexwordlist;\n    };\n    return ConvertHexWord;\n}());\nexports.default = ConvertHexWord;\n","import React from \"react\";\nimport \"./HexWord.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport ConvertHexWord from \"./ConvertHexWord\";\n\ninterface HexWordCardProps {\n  id: number;\n  hexword: string;\n  word: string;\n}\n\nclass HexWordHeader extends React.Component {\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-4 justify-content-between\">\n        <Navbar.Brand href=\"#home\">Hex Words</Navbar.Brand>\n        <Navbar.Text>\n          <a href=\"#faq\">FAQ</a>\n        </Navbar.Text>\n      </Navbar>\n    );\n  }\n}\n\nclass HexWordList extends React.Component {\n  render() {\n    let hexword = new ConvertHexWord(true);\n    let hexwordlist = hexword.WordListToHexList();\n    return (\n      <Container className=\"card-columns\">\n        {hexwordlist.map((hexword, index) => (\n          <HexWordCard id={index} word={hexword.word} hexword={hexword.hexword} />\n        ))}\n      </Container>\n    );\n  }\n}\n\nclass HexWordCard extends React.Component<HexWordCardProps> {\n  render() {\n    return (\n      <div key={this.props.id.toString()}>\n        <Card>\n          <Card.Body>\n            <Card.Title> {this.props.word} </Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">Hex: 0x{this.props.hexword} </Card.Subtitle>\n            <Card.Link href={\"https://www.dictionary.com/browse/\" + this.props.word} target=\"_blank\">\n              <Button variant=\"link\">View in Dictionary.com</Button>\n            </Card.Link>\n            <br />\n            <Card.Link href={\"https://www.urbandictionary.com/define.php?term=\" + this.props.word} target=\"_blank\">\n              <Button variant=\"link\">View in Urbandictionary.com</Button>\n            </Card.Link>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nclass HexWordFaq extends React.Component {\n  render() {\n    return (\n      <Container className=\"mt-4\">\n        <div id=\"faq\">\n          <p>Q: What is this ?</p>\n          <p>Ans: A list of english words that can be represented using hex digits </p>\n          <p>Q: Why ? </p>\n          <p>\n            Ans: I saw a <a href=\"https://youtu.be/nNBktKw9Is4?t=96\">video</a> on{\" \"}\n            <a href=\"https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w\">liveoverflow's</a> youtube channel where\n            the hex value 0xf00dbabe was written to and address. And so I wanted to explore if similar names existed.\n          </p>\n          <p>Q: Where is the code ?</p>\n          <p>\n            A python code is here <a href=\"https://github.com/uttarayan21/hexwords\">uttarayan21/hexwords</a>\n            <br />\n            The code for this website is on the same repo just in the{\" \"}\n            <a href=\"https://github.com/uttarayan21/hexwords/tree/master/docs\">docs</a> directory\n          </p>\n          <p>Q: Why is this so buggy ?</p>\n          <p>Ans: Also this is my first react app so there might still be a lot of bugs </p>\n          <p>Q: Why do some words don't have meaning or gets redirected to something else ?</p>\n          <p>Some of the words in the wordlist don't seem to have a dictionary entry</p>\n          <p>Q: More features ?</p>\n          <p>I also want to add stuff like filter and custom values for the english letters </p>\n        </div>\n      </Container>\n    );\n  }\n}\n\nclass HexWord extends React.Component {\n  render() {\n    return (\n      <div>\n        <HexWordHeader />\n        <HexWordList />\n        <HexWordFaq />\n      </div>\n    );\n  }\n}\n\nexport default HexWord;\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HexWord from './HexWord';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <HexWord />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}